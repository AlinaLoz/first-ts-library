<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="27867774-afce-4a67-9f6b-c90908e9281f" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/.prettierrc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/prettier.config.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/clients/apis/crypto.apis.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/clients/apis/eth/eth.api.services/eth.address.api.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/clients/apis/eth/eth.api.services/eth.contract.api.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/clients/apis/eth/eth.api.services/eth.main.info.api.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/clients/apis/eth/eth.api.services/eth.notify.api.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/clients/apis/eth/eth.api.services/eth.raw.transaction.api.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/clients/apis/eth/eth.api.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/clients/events/crypto.events.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/clients/events/eth/eth.events.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/constants/events.constants.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/constants/inversify.constants.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/crypto.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/di.container.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/dtos/event.dto.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/interfaces/apis/apis.inteface.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/interfaces/apis/eth/eth.api.interface.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/interfaces/apis/eth/eth.api.services/eth.address.api.interface.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/interfaces/apis/eth/eth.api.services/eth.contract.api.interface.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/interfaces/apis/eth/eth.api.services/eth.main.info.interface.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/interfaces/apis/eth/eth.api.services/eth.notify.api.interface.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/interfaces/apis/eth/eth.api.services/eth.raw.transaction.interface.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/interfaces/events/eth/eth.events.interface.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/interfaces/events/events.interface.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tslint.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/codeStyles/Project.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/codeStyles/Project.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/src/index.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/build/src/index.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/build/src/index.js.map" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/client.ts" beforeDir="false" afterPath="$PROJECT_DIR$/client.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/apis/eth/address.api.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/interfaces/crypto.interface.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/apis/eth/contract.api.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/errors/base.error.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/apis/eth/eth.api.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/apis/eth/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/apis/eth/notify.api.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/apis/eth/raw.transaction.api.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/crypto.wrapper.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/apis/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/apis/market/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/cl.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clients/crypto.http.client.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clients/crypto.socket.client.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/connections/http.connection.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/connections/socket.connection.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/crypto.client.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/interfaces/apis/eth.apis.inteface.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/interfaces/apis/market.apis.inteface.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/interfaces/clients/http.client.interface.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/interfaces/clients/socket.client.interface.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/interfaces/configs/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/interfaces/connections/http.connection.interface.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/interfaces/connections/socket.connection.interface.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/interfaces/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/interfaces/index.ts" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="CSS File" />
        <option value="JavaScript File" />
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1TbNkfWp0uSfDmpkitYsUl7L50u" />
  <component name="PropertiesComponent">
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../echo-wallet-backend/echo-wallet-backend" />
    <property name="list.type.of.created.stylesheet" value="CSS" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="prettierjs.PrettierConfiguration.Package" value="$PROJECT_DIR$/node_modules/prettier" />
    <property name="settings.editor.selected.configurable" value="preferences.sourceCode.TypeScript" />
    <property name="ts.external.directory.path" value="$PROJECT_DIR$/node_modules/typescript/lib" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/src/interfaces/apis/eth/eth.api.services" />
      <recent name="$PROJECT_DIR$/src/clients/apis/eth/bfdsv" />
      <recent name="$PROJECT_DIR$/src/clients" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/src/interfaces/apis" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="npm.compile">
    <configuration name="check" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="check" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="compile" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="compile" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="fix" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="fix" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="format" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="format" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="start" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="start" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="npm.compile" />
        <item itemvalue="npm.start" />
        <item itemvalue="npm.format" />
        <item itemvalue="npm.fix" />
        <item itemvalue="npm.check" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="27867774-afce-4a67-9f6b-c90908e9281f" name="Default Changelist" comment="" />
      <created>1573724979673</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1573724979673</updated>
      <workItem from="1573724981409" duration="741000" />
      <workItem from="1573799527162" duration="15532000" />
      <workItem from="1574060155003" duration="16213000" />
      <workItem from="1574077020486" duration="2010000" />
      <workItem from="1574079045987" duration="7595000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
    <option name="exactExcludedFiles">
      <list>
        <option value="$PROJECT_DIR$/client.js" />
      </list>
    </option>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>